/*****************************************************************
Question : Asteriod Collosion
******************************************************************/



// Solution : 1 

import java.io.*;
import java.util.*;

public class Solution {
    // public static int[] collideResulting(int[] arr) {
    public static void collideResulting(int[] arr) {
        int n = arr.length;

        // Create an Stack
        Stack<Integer> stack = new Stack();

        for (int i = 0; i < n; i++) {
            if (arr[i] < 0) {		// if arr[i]<0 i.e. check if stack is not empty and also check stack's peek element is greater than zero
                while (!stack.isEmpty() && stack.peek() > 0 && stack.peek() < Math.abs(arr[i])) {
                    stack.pop();
                }
                if (!stack.isEmpty() && stack.peek() > 0) {
                    if (stack.peek() == Math.abs(arr[i])) {
                        stack.pop();
                    }
                } else {
                    stack.push(arr[i]);
                }
            } else {
                stack.push(arr[i]);
            }
        }
        
        
        for(int i=0; i<stack.size(); i++){
            System.out.print(arr[i]+" ");
        }
        
        
        // // Now, printing the array reulst
        // int res[] = new int[stack.size()];
        // for(int i=res.length-1; i>=0; i--){
        //     res[i] = stack.pop();
        // }
        // return res;
        
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt(); // size of the array
        // create an array
        int arr[] = new int[n];

        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt(); // array elements inputed here
        }
        
        
        collideResulting(arr);
        
		// int ans[] = collideResulting(arr);
		// for(int ele: ans){
		// System.out.print(ele+" ");
		// }
    }
}
