CPP Solution:-
-----------------
int lengthOfLongestSubstring(string s) {
int len = 0;
for(int i = 0; i < s.size(); i++){
  vector<bool> visited (256);
  for(int j = i;  j < s.size(); j++){
    if(visited[s[j]] == true){
      break;
    } else {
      // update the result
      len = max (len, j - i + 1);
      visited[s[j]] = true;
    }
  }
  
  visited[s[i]] = false;
}
return len;
}




Java solution:
----------------

class Solution {
    public int lengthOfLongestSubstring(String s) {
        
      int len = 0;
      for(int i = 0; i < s.length(); i++){
        boolean[] visited = new boolean[256];
        
        for(int j = i;  j < s.length(); j++){
          if(visited[s.charAt(j)] == true){
            break;
          } else {
            // update the result
            len = Math.max(len, j - i + 1);
            visited[s.charAt(j)] = true;
          }
        }
        
        visited[s.charAt(i)] = false;
      }
      return len;
    }
}




