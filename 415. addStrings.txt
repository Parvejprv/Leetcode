Question:- Add String 
Link: https://leetcode.com/problems/add-strings/


Solution:- 


// Java 
=============

/*
 * @author :- Parvej Alam
 * AddString
*/
class Solution {

  public static String add(String num1, String num2){
    // Ensure num1 is always the larger or equal length string
    if(num1.length() < num2.length()){
      // swap these two value 
      String temp = num1;
      num1 = num2;
      num2 = temp;
    }

    StringBuilder ans = new StringBuilder();
    int index1 = num1.length() - 1;
    int index2 = num2.length() - 1;

    int carry = 0, sum;

    while(index2 >= 0){
      sum = (num1.charAt(index1) - '0') + (num2.charAt(index2) - '0') + carry;
      carry = sum / 10;   // carry updation
      ans.append( (char) ('0' + sum % 10));
      index1--;
      index2--;
    }

    while(index1 >= 0){
      sum = (num1.charAt(index1) - '0') + carry;
      carry = sum / 10;   // carry updation
      ans.append((char) ('0' + sum % 10));
      index1--;
    }

    // a case where carry still remains 1
    if(carry > 0){
      ans.append(carry);
    }

    // reverse the result string
    ans.reverse();
    return ans.toString();
  }

  public static String addStrings(String num1, String num2){
    return add(num1, num2);
  }

}


























CPP
=======


class Solution {
public:
  
    string add(string num1, string num2){
  //here let suppose num1 length|size is greater than num2
    string ans;

    // index1 point last character of the string num1, and index2 points for last character of num2
    int index1 = num1.size()-1, index2 = num2.size()-1;

    int carry = 0, sum;     // take sum variable for sum of these two character and a carry variable if there any carry obtain from that

    

    // now, check while index2 is greater than equals to zero
    while(index2 >= 0){
      sum = ((num1[index1] - '0') + (num2[index2] - '0')  + carry);
      carry = sum / 10;
      char c = '0' + sum % 10;  // it would be converted
      ans += c;   // add it to the answer
      index1--;
      index2--; 
    }
    
    // index1 abhi bacha hai, means num1 bacha hai ...
    while(index1 >= 0){
      sum = (num1[index1] - '0') + carry;
      carry = sum / 10;   // to obtain the carry
      char ch = '0' + sum % 10;  // it would be converted into character
      ans += ch;   // add it to tha answer
      index1--;
    }

    // a case where carry still remain 1
    if(carry)
    ans += '1';

    // reverse the string
    reverse(ans.begin(), ans.end());
    return ans;
}
  
    string addStrings(string num1, string num2) {
        
      if(num1.size() < num2.size())
        return add(num2, num1);
      else
        return add(num1, num2);
      
    }
};



